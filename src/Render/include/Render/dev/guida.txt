- accedere al proprio account github da visual studio se non gia' fatto
- installare opengl extension viewer
- installare renderdoc
- winget install cmake, ninja, git, conan, cmake
- scaricare visual studio (con build tools 143 + versione nuova)
- settare nel conan profile come generator Ninja Multi-Config
	[settings]
	os=Windows
	arch=x86_64
	build_type=Debug
	compiler=clang
	compiler.version=17
	compiler.cppstd=gnu20
	compiler.runtime_type=Release
	compiler.runtime_version=v143

	[conf]
	tools.cmake.cmaketoolchain:generator=Ninja Multi-Config

- cambiare in build.py la path CMAKE_LINKER


T
The current "canonical" flow for CMake + VS would be:

conan install ...
cmake --preset conan-default
Open VS generated solution
I dislike the open CMake project from VS flow, maybe I am old school, but I think it is much better the explicit flow, and I see way more developers using this flow than opening CMake projects directly with VS, as that integration seemed to be traditionally a bit problematic or at least confusing in some cases.

So, is there a way to ensure that a conan install is run by the IDE at the beginning so that these files would already exist?

We had a VS plugin that automatically ran Conan directly in the IDE. Unfortunately this plugin is not maintained at this moment. We will get back to it at some point (at the moment we are focused on other integrations like cmake-conan and CLion), but it might take some time.

The cmake-conan integration in https://github.com/conan-io/cmake-conan/tree/develop2, automatically runs Conan when cmake is called. If cmake is called automatically from the IDE, that might achieve the desired functionality. However I think that integration for 2.0 is still wip, not ready for production yet, and in general it is more complicated, yet another level of complicated abstraction to avoid just typing 1 extra conan install line (the cmake --preset would be standard to me, I don't count it as an extra line, because in my experience that is the default approach that should be done even without Conan)

VISUAL STUDIO SHORTS

Ctrl Alt L -> Open Solution Explorer
Ctrl '     -> Open Terminal
Ctrl Tab   -> (From Terminal) get back to sources


fadslkfasdlkfjsa

seguire guida https://github.com/cpp-best-practices/cmake_template/blob/main/README_dependencies.md
	without include-what-you-use